'use strict';

var expect = require('chai').expect,
    ssoOlr = require('../index');

describe('sso-olr', function () {

    var client,
        endpoint = 'http://s-ws-i.cengage.com',
        username = '4ltrStudent2@cengage.com',
        password = 'T3sting',
        token,
        invalidToken = 'adsfasfs',
        eisbn = '9781285860220';


    before(function () {
        client = ssoOlr(endpoint);
    });

    describe('getToken', function() {
        it('handles successful authentication', function(done) {
            client.getToken(username, password, function(err, data) {
                expect(err).to.not.exist;
                expect(data).to.exist;
                done();
            });
        });

        it('handles unsuccessful authentication', function(done) {
            client.getToken('fadfsaf', 'afdsfas', function(err, data) {
                expect(err).to.exist;
                expect(data).to.not.exist;
                done();
            });
        });
    });

    describe('getUser', function() {
        beforeEach(function(done) {
            client.getToken(username, password, function(err, data) {
                token = data.token;
                done();
            });
        });

        it('returns a new token and userdata', function(done) {
            client.getUser(token, function(err, data) {
                expect(data.token).to.not.equal(token);
                done();
            });
        });
    });

    describe('getEntitlements', function() {
        beforeEach(function(done) {
            client.getToken(username, password, function(err, data) {
                token = data.token;
                done();
            });
        });

        it('should reject an invalid token', function(done) {
            client.getEntitlements(invalidToken, eisbn, function(err, data) {
                expect(err).to.exist;
                expect(data).to.not.exist;
                done();
            });
        });

        it('should return entitlement information for EISBN', function(done) {
            client.getEntitlements(token, eisbn, function(err, data) {
                expect(err).to.not.exist;
                expect(data).to.exist;
                done();
            });
        });
    });
});
